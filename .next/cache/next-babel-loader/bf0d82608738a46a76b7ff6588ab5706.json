{"ast":null,"code":"var _jsxFileName = \"/Users/robbiesmith/Documents/betasoft/betasoft/src/components/scrollingWrapper.jsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\n\nclass ScrollingWrapper extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      hasScrolled: false\n    });\n\n    _defineProperty(this, \"onScroll\", () => {\n      if (this.scrollingWrapper.scrollTop > 100 && !this.state.hasScrolled) {\n        this.setState({\n          hasScrolled: true\n        });\n      } else if (this.scrollingWrapper.scrollTop < 100 && this.state.hasScrolled) {\n        this.setState({\n          hasScrolled: false\n        });\n      }\n\n      console.log(this.state.hasScrolled);\n    });\n\n    _defineProperty(this, \"scrollToTop\", () => {\n      this.scrollingWrapper.scrollTop = 0;\n    });\n\n    _defineProperty(this, \"reference\", id => ref => {\n      this[id] = ref;\n    });\n  }\n\n  componentDidMount() {\n    this.scrollingWrapper.addEventListener('scroll', this.onScroll);\n  }\n\n  render() {\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.state.hasScrolled && __jsx(\"div\", {\n      className: \"ScrollToTopIconContainer\",\n      onClick: this.scrollToTop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"^\"), __jsx(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"BACK TO TOP\")), __jsx(\"div\", {\n      className: \"ScrollingWrapperContainer\",\n      ref: this.reference('scrollingWrapper'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.props.children));\n  }\n\n}\n\nexport default ScrollingWrapper;","map":{"version":3,"sources":["/Users/robbiesmith/Documents/betasoft/betasoft/src/components/scrollingWrapper.jsx"],"names":["React","ScrollingWrapper","Component","hasScrolled","scrollingWrapper","scrollTop","state","setState","console","log","id","ref","componentDidMount","addEventListener","onScroll","render","scrollToTop","reference","props","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,gBAAN,SAA+BD,KAAK,CAACE,SAArC,CAA+C;AAAA;AAAA;;AAAA,mCACrC;AAAEC,MAAAA,WAAW,EAAE;AAAf,KADqC;;AAAA,sCAOlC,MAAM;AACf,UAAI,KAAKC,gBAAL,CAAsBC,SAAtB,GAAkC,GAAlC,IAAyC,CAAC,KAAKC,KAAL,CAAWH,WAAzD,EAAsE;AACpE,aAAKI,QAAL,CAAc;AAAEJ,UAAAA,WAAW,EAAE;AAAf,SAAd;AACD,OAFD,MAEO,IAAI,KAAKC,gBAAL,CAAsBC,SAAtB,GAAkC,GAAlC,IAAyC,KAAKC,KAAL,CAAWH,WAAxD,EAAqE;AAC1E,aAAKI,QAAL,CAAc;AAAEJ,UAAAA,WAAW,EAAE;AAAf,SAAd;AACD;;AACDK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWH,WAAvB;AACD,KAd4C;;AAAA,yCAgB/B,MAAM;AAClB,WAAKC,gBAAL,CAAsBC,SAAtB,GAAkC,CAAlC;AACD,KAlB4C;;AAAA,uCAoBjCK,EAAE,IAAIC,GAAG,IAAI;AACvB,WAAKD,EAAL,IAAWC,GAAX;AACD,KAtB4C;AAAA;;AAG7CC,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,gBAAL,CAAsBS,gBAAtB,CAAuC,QAAvC,EAAiD,KAAKC,QAAtD;AACD;;AAmBDC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,KAAL,CAAWH,WAAX,IACC;AAAK,MAAA,SAAS,EAAC,0BAAf;AAA0C,MAAA,OAAO,EAAE,KAAKa,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CAFJ,EAOE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAA2C,MAAA,GAAG,EAAE,KAAKC,SAAL,CAAe,kBAAf,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWC,QADd,CAPF,CADF;AAaD;;AAtC4C;;AAyC/C,eAAelB,gBAAf","sourcesContent":["import React from 'react'\n\nclass ScrollingWrapper extends React.Component {\n  state = { hasScrolled: false }\n\n  componentDidMount() {\n    this.scrollingWrapper.addEventListener('scroll', this.onScroll)\n  }\n\n  onScroll = () => {\n    if (this.scrollingWrapper.scrollTop > 100 && !this.state.hasScrolled) {\n      this.setState({ hasScrolled: true })\n    } else if (this.scrollingWrapper.scrollTop < 100 && this.state.hasScrolled) {\n      this.setState({ hasScrolled: false })\n    }\n    console.log(this.state.hasScrolled)\n  }\n\n  scrollToTop = () => {\n    this.scrollingWrapper.scrollTop = 0\n  }\n\n  reference = id => ref => {\n    this[id] = ref\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.hasScrolled && (\n          <div className=\"ScrollToTopIconContainer\" onClick={this.scrollToTop}>\n            <div>^</div>\n            <button>BACK TO TOP</button>\n          </div>\n        )}\n        <div className=\"ScrollingWrapperContainer\" ref={this.reference('scrollingWrapper')}>\n          {this.props.children}\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default ScrollingWrapper\n"]},"metadata":{},"sourceType":"module"}