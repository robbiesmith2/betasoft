{"ast":null,"code":"var _jsxFileName = \"/Users/robbiesmith/Documents/betasoft/betasoft/src/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'unfetch';\nimport useSWR from 'swr';\n\nasync function fetcher(path) {\n  const res = await fetch(`https://jsonplaceholder.typicode.com/comments?postId=1`);\n  const json = await res.json();\n  return json;\n}\n\nfunction HomePage() {\n  const {\n    data,\n    error\n  } = useSWR('/repos/zeit/next.js', fetcher);\n  if (error) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"failed to load\");\n  if (!data) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"loading...\");\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Next stars: \", data.stargazers_count);\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/robbiesmith/Documents/betasoft/betasoft/src/pages/index.js"],"names":["fetch","useSWR","fetcher","path","res","json","HomePage","data","error","stargazers_count"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,eAAeC,OAAf,CAAuBC,IAAvB,EAA6B;AAC3B,QAAMC,GAAG,GAAG,MAAMJ,KAAK,CAAE,wDAAF,CAAvB;AACA,QAAMK,IAAI,GAAG,MAAMD,GAAG,CAACC,IAAJ,EAAnB;AACA,SAAOA,IAAP;AACD;;AAED,SAASC,QAAT,GAAoB;AAClB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBP,MAAM,CAAC,qBAAD,EAAwBC,OAAxB,CAA9B;AAEA,MAAIM,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACX,MAAI,CAACD,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACX,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAkBA,IAAI,CAACE,gBAAvB,CAAP;AACD;;AAED,eAAeH,QAAf","sourcesContent":["import fetch from 'unfetch'\nimport useSWR from 'swr'\n\nasync function fetcher(path) {\n  const res = await fetch(`https://jsonplaceholder.typicode.com/comments?postId=1`)\n  const json = await res.json()\n  return json\n}\n\nfunction HomePage() {\n  const { data, error } = useSWR('/repos/zeit/next.js', fetcher)\n  \n  if (error) return <div>failed to load</div>\n  if (!data) return <div>loading...</div>\n  return <div>Next stars: {data.stargazers_count}</div>\n}\n\nexport default HomePage\n"]},"metadata":{},"sourceType":"module"}