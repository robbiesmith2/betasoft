{"ast":null,"code":"var _jsxFileName = \"/Users/robbiesmith/Documents/betasoft/betasoft/src/components/scrollingWrapper.jsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\n\nclass ScrollingWrapper extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      hasScrolled: false\n    });\n\n    _defineProperty(this, \"onScroll\", () => {\n      if (this.scrollingWrapper.scrollTop > 100 && !this.state.hasScrolled) {\n        this.setState({\n          hasScrolled: true\n        });\n      } else if (this.scrollingWrapper.scrollTop < 100 && this.state.hasScrolled) {\n        this.setState({\n          hasScrolled: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"scrollToTop\", () => {\n      this.scrollingWrapper.scrollTop = 0;\n    });\n\n    _defineProperty(this, \"reference\", id => ref => {\n      this[id] = ref;\n    });\n  }\n\n  componentDidMount() {\n    this.scrollingWrapper.addEventListener('scroll', this.onScroll);\n  }\n\n  render() {\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.state.hasScrolled && __jsx(ScrollToTopIconContainer, {\n      onClick: this.scrollToTop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"^\"), __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"BACK TO TOP\")), __jsx(ScrollingWrapperContainer, {\n      ref: this.reference('scrollingWrapper'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.props.children));\n  }\n\n}\n\nexport default ScrollingWrapper;\nconst ScrollingWrapperContainer = styled.div`\n  overflow-y: scroll;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n  position: relative;\n`;\nconst ScrollToTopIconContainer = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  margin-left: -50px;\n  z-index: 2;\n  cursor: pointer;\n  opacity: 0.4;\n  text-align: center;\n  &:hover {\n    opacity: 1;\n    animation: wiggle 1s ease;\n    animation-iteration-count: 1;\n  }\n  @keyframes wiggle {\n    20% { transform: translateY(6px); }\n    40% { transform: translateY(-6px); }\n    60% { transform: translateY(4px); }\n    80% { transform: translateY(-2px); }\n    100% { transform: translateY(0); }\n  }\n`;\nconst Button = styled.div`\n  background: black;\n  color: white;\n  font-family: Teko;\n  font-size: 16px;\n  line-height: 30px;\n  border-radius: 15px;\n  width: 100px;\n  padding-top: 4px;\n`;","map":{"version":3,"sources":["/Users/robbiesmith/Documents/betasoft/betasoft/src/components/scrollingWrapper.jsx"],"names":["React","ScrollingWrapper","Component","hasScrolled","scrollingWrapper","scrollTop","state","setState","id","ref","componentDidMount","addEventListener","onScroll","render","scrollToTop","reference","props","children","ScrollingWrapperContainer","styled","div","ScrollToTopIconContainer","Button"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,gBAAN,SAA+BD,KAAK,CAACE,SAArC,CAA+C;AAAA;AAAA;;AAAA,mCACrC;AAAEC,MAAAA,WAAW,EAAE;AAAf,KADqC;;AAAA,sCAOlC,MAAM;AACf,UAAI,KAAKC,gBAAL,CAAsBC,SAAtB,GAAkC,GAAlC,IAAyC,CAAC,KAAKC,KAAL,CAAWH,WAAzD,EAAsE;AACpE,aAAKI,QAAL,CAAc;AAAEJ,UAAAA,WAAW,EAAE;AAAf,SAAd;AACD,OAFD,MAEO,IAAI,KAAKC,gBAAL,CAAsBC,SAAtB,GAAkC,GAAlC,IAAyC,KAAKC,KAAL,CAAWH,WAAxD,EAAqE;AAC1E,aAAKI,QAAL,CAAc;AAAEJ,UAAAA,WAAW,EAAE;AAAf,SAAd;AACD;AACF,KAb4C;;AAAA,yCAe/B,MAAM;AAClB,WAAKC,gBAAL,CAAsBC,SAAtB,GAAkC,CAAlC;AACD,KAjB4C;;AAAA,uCAmBjCG,EAAE,IAAIC,GAAG,IAAI;AACvB,WAAKD,EAAL,IAAWC,GAAX;AACD,KArB4C;AAAA;;AAG7CC,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,gBAAL,CAAsBO,gBAAtB,CAAuC,QAAvC,EAAiD,KAAKC,QAAtD;AACD;;AAkBDC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKP,KAAL,CAAWH,WAAX,IACC,MAAC,wBAAD;AAA0B,MAAA,OAAO,EAAE,KAAKW,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CAFJ,EAOE,MAAC,yBAAD;AAA2B,MAAA,GAAG,EAAE,KAAKC,SAAL,CAAe,kBAAf,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWC,QADd,CAPF,CADF;AAaD;;AArC4C;;AAwC/C,eAAehB,gBAAf;AAEA,MAAMiB,yBAAyB,GAAGC,MAAM,CAACC,GAAI;;;;;CAA7C;AAOA,MAAMC,wBAAwB,GAAGF,MAAM,CAACC,GAAI;;;;;;;;;;;;;;;;;;;;;CAA5C;AAuBA,MAAME,MAAM,GAAGH,MAAM,CAACC,GAAI;;;;;;;;;CAA1B","sourcesContent":["import React from 'react'\n\nclass ScrollingWrapper extends React.Component {\n  state = { hasScrolled: false }\n\n  componentDidMount() {\n    this.scrollingWrapper.addEventListener('scroll', this.onScroll)\n  }\n\n  onScroll = () => {\n    if (this.scrollingWrapper.scrollTop > 100 && !this.state.hasScrolled) {\n      this.setState({ hasScrolled: true })\n    } else if (this.scrollingWrapper.scrollTop < 100 && this.state.hasScrolled) {\n      this.setState({ hasScrolled: false })\n    }\n  }\n\n  scrollToTop = () => {\n    this.scrollingWrapper.scrollTop = 0\n  }\n\n  reference = id => ref => {\n    this[id] = ref\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.hasScrolled && (\n          <ScrollToTopIconContainer onClick={this.scrollToTop}>\n            <div>^</div>\n            <Button>BACK TO TOP</Button>\n          </ScrollToTopIconContainer>\n        )}\n        <ScrollingWrapperContainer ref={this.reference('scrollingWrapper')}>\n          {this.props.children}\n        </ScrollingWrapperContainer>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default ScrollingWrapper\n\nconst ScrollingWrapperContainer = styled.div`\n  overflow-y: scroll;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n  position: relative;\n`\n\nconst ScrollToTopIconContainer = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  margin-left: -50px;\n  z-index: 2;\n  cursor: pointer;\n  opacity: 0.4;\n  text-align: center;\n  &:hover {\n    opacity: 1;\n    animation: wiggle 1s ease;\n    animation-iteration-count: 1;\n  }\n  @keyframes wiggle {\n    20% { transform: translateY(6px); }\n    40% { transform: translateY(-6px); }\n    60% { transform: translateY(4px); }\n    80% { transform: translateY(-2px); }\n    100% { transform: translateY(0); }\n  }\n`\n\nconst Button = styled.div`\n  background: black;\n  color: white;\n  font-family: Teko;\n  font-size: 16px;\n  line-height: 30px;\n  border-radius: 15px;\n  width: 100px;\n  padding-top: 4px;\n`\n"]},"metadata":{},"sourceType":"module"}